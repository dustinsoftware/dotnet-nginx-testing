services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      sqlserver:
        condition: service_healthy
      mock-http-server:
        condition: service_started


  nginx:
    image: nginx:latest
    ports:
      - "18151:18151"
      - "18152:18152"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:18151/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  bombardier:
    build:
      context: .
      dockerfile: Dockerfile.bombardier
    volumes:
      - ./bombardier-scripts:/bombardier-scripts
    depends_on:
      - nginx

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    volumes:
      - ./sqlserver-init:/docker-entrypoint-initdb.d
    environment:
      SA_PASSWORD: "YourStrongPassw0rd"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD-SHELL", "/docker-entrypoint-initdb.d/init.sh"]
      interval: 10s
      timeout: 30s
      retries: 30

  mock-http-server:
    build:
      context: .
      dockerfile: Dockerfile.mock-http-server
    ports:
      - "5237:5237"
